@model Model.ViewModels.MovieViewModel
@{
    string action = "PutMovie";

    if (Model.Title == null || Model.Title.Equals(""))
    {
        action = "PostMovie";
        ViewBag.Title = "New Movie";
    }
    else
    {
        ViewBag.Title = "Edit \"" + Model.Title + "\"";
    }
}

<div class="row site-navbar-bumper">
    <div class="col-lg-12 page-header-wrapper">
        <h1>@ViewBag.Title</h1>
    </div>
</div>
<hr />

@if (TempData["ErrorMessage"] != null)
{
    <div class="row padding-bottom">
        <div class="col-md-12 bg-danger">
            <div class="text-center text-light message-text-large">@TempData["ErrorMessage"]</div>
        </div>
    </div>
}

@using (Html.BeginForm(action, "MoviesAdministration"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id, new { @class = "form-control" })
    <div class="row padding-bottom">
        <div class="col-lg-2 col-md-3">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-lg-10 col-md-9">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger " })
        </div>
    </div>
    <div class="row padding-bottom">
        <div class="col-lg-2 col-md-3">
            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-lg-10 col-md-9">
            @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger " })
        </div>
    </div>
    <div class="row padding-bottom">
        <div class="col-lg-2 col-md-3">
            @Html.LabelFor(model => model.Rated, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-lg-10 col-md-9">
            @Html.EditorFor(model => model.Rated, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Rated, "", new { @class = "text-danger " })
        </div>
    </div>
    <div class="row padding-bottom">
        <div class="col-lg-2 col-md-3">
            @Html.LabelFor(model => model.Runtime, htmlAttributes: new { @class = "control-label " })
        </div>
        <div class="col-lg-10 col-md-9">
            @Html.EditorFor(model => model.Runtime, new { htmlAttributes = new { @class = "form-control " } })
            @Html.ValidationMessageFor(model => model.Runtime, "", new { @class = "text-danger " })
        </div>
    </div>
    <div class="row padding-bottom">
        <div class="col-lg-2 col-md-3">
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label " })
        </div>
        <div class="col-lg-10 col-md-9">
            @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control " } })
            @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger " })
        </div>
    </div>
    <div class="row padding-bottom">
        <div class="col-lg-2 col-md-3">
            @Html.LabelFor(model => model.Director, htmlAttributes: new { @class = "control-label " })
        </div>
        <div class="col-lg-10 col-md-9">
            @Html.EditorFor(model => model.Director, new { htmlAttributes = new { @class = "form-control " } })
            @Html.ValidationMessageFor(model => model.Director, "", new { @class = "text-danger " })
        </div>
    </div>
    <div class="row padding-bottom">
        <div class="col-lg-2 col-md-3">
            @Html.LabelFor(model => model.Plot, htmlAttributes: new { @class = "control-label " })
        </div>
        <div class="col-lg-10 col-md-9">
            @Html.TextAreaFor(model => model.Plot, new { @class = "form-control " })
            @Html.ValidationMessageFor(model => model.Plot, "", new { @class = "text-danger " })
        </div>
    </div>
    <div class="row padding-bottom">
        <div class="col-lg-2 col-md-3">
            @Html.LabelFor(model => model.Poster, htmlAttributes: new { @class = "control-label " })
        </div>
        <div class="col-lg-10 col-md-9">
            @Html.EditorFor(model => model.Poster, new { htmlAttributes = new { @class = "form-control " } })
            @Html.ValidationMessageFor(model => model.Poster, "", new { @class = "text-danger " })
        </div>
    </div>
    <div class="row padding-bottom">
        <div class="col-lg-2 col-md-3">
            @Html.LabelFor(model => model.ImdbRating, htmlAttributes: new { @class = "control-label " })
        </div>
        <div class="col-lg-10 col-md-9">
            @Html.EditorFor(model => model.ImdbRating, new { htmlAttributes = new { @class = "form-control " } })
            @Html.ValidationMessageFor(model => model.ImdbRating, "", new { @class = "text-danger " })
        </div>
    </div>
    <div class="row padding-bottom">
        <div class="col-lg-2 col-md-3">
            @Html.LabelFor(model => model.ScreenShot, htmlAttributes: new { @class = "control-label " })
        </div>
        <div class="col-lg-10 col-md-9">
            @Html.EditorFor(model => model.ScreenShot, new { htmlAttributes = new { @class = "form-control " } })
            @Html.ValidationMessageFor(model => model.ScreenShot, "", new { @class = "text-danger " })
        </div>
    </div>
    <div class="row padding-bottom">
        <div class="col-lg-2 col-md-3">
        </div>
        <div class="col-lg-10 col-md-9">
            <input type="submit" value="Save" class="btn btn-primary btn-full-width" />
        </div>
    </div>
}