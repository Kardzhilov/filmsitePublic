@model  Model.ViewModels.AdminUserViewModel
@{
    string action = "PutAdminUser";
    if (Model == null || Model.UserName.Equals(""))
    {
        action = "PostAdminUser";
        ViewBag.Title = "New Admin User";
    }
    else
    {
        ViewBag.Title = "Edit " + Model.UserName;
    }
}

<div class="row site-navbar-bumper">
    <div class="col-lg-12 page-header-wrapper">
        <h1>@ViewBag.Title</h1>
    </div>
</div>
<hr />

@if (TempData["ErrorMessage"] != null)
{
    <div class="row padding-bottom">
        <div class="col-md-12 bg-danger">
            <div class="text-center text-light message-text-large">@TempData["ErrorMessage"]</div>
        </div>
    </div>
}

@using (Html.BeginForm(action, "AdminUserAdministration"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    if (Model.UserName == null || Model.UserName.Equals(""))
    {
        <div class="row padding-bottom">
            <div class="col-lg-2 col-md-3">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-lg-10 col-md-9">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger " })
            </div>
        </div>
    }
    else
    {
        @Html.HiddenFor(model => model.UserName, new { @class = "form-control" })
    }
    <div class="row padding-bottom">
        <div class="col-lg-2 col-md-3">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-lg-10 col-md-9">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @type = "password", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger " })
        </div>
    </div>
    <div class="row padding-bottom">
        <div class="col-lg-2 col-md-3">
            @Html.Label("Repeat Password", htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-lg-10 col-md-9">
            @Html.EditorFor(model => model.RepeatPassword, new { htmlAttributes = new { @type = "password", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RepeatPassword, "", new { @class = "text-danger " })
        </div>
    </div>
    <div class="row padding-bottom">
        <div class="col-lg-2 col-md-3">
        </div>
        <div class="col-lg-10 col-md-9">
            <input type="submit" value="Save" class="btn btn-primary btn-full-width" />
        </div>
    </div>
}